@model Concretar.Services.Models.GridLoteModel
@{
    var Email = User.Claims.FirstOrDefault(x => x.Type == "Usuario").Value;
    var edit = Html.ColumnTablePermission("Edit", "Lote", Email);
    var delete = Html.ColumnTablePermission("Delete", "Lote", Email);
}

@(Html.Grid(Model.ListLote)
                    .Build(columns =>
                    {
                        columns.Add(m => m.Nombre).Titled("Nombre");
                        columns.Add(m => m.Dimension).Titled("Dimension en m2");
                        columns.Add(m => m.Ubicacion).Titled("Ubicacion");
                        columns.Add(m => m.Precio).Titled("Precio");
                        columns.Add(m => Html.ActionLink("", "Edit", "Lote", new { Id = m.LoteId }, new { @class = "zmdi zmdi-edit text-warning", @title = "Editar" })).Css("action-cell " + edit).Titled("Editar");
                        columns.Add(m => Html.ActionLink("", "Delete", "Lote", new { Id = m.LoteId }, new { @class = "zmdi zmdi-delete text-danger swal-delete", @title = "Eliminar" })).Css("action-cell " + delete).Titled("Eliminar");
                    })
                   .Pageable(pager =>
                      {
                          pager.ProcessorType = GridProcessorType.Manual;
                          pager.RowsPerPage = AppSettings.Value.Paging.RowsPerPage;
                          pager.TotalRows = Model.TotalRows;
                      })
                            .Empty("No se encontró ningún registro")
                            .Css("table table-hover")
)