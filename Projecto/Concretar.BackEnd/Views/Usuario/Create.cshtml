@model Concretar.Services.Models.UsuarioViewModel
@{
    ViewData["Title"] = "Nuevo usuario";
    var selectRoles = (IEnumerable<SelectListItem>)ViewData["Roles"];
}
<style>
    span.select2-container {
        z-index: 150515;
    }

    .select2-container .select2-selection--single .select2-selection__rendered {
        white-space: normal !important;
    }

    .select2-container {
        width: 800px !important;
    }
</style>
<header class="content__title">
    <h1>@ViewData["Title"]</h1>
    <div class="actions">
        <a href="@Url.Action("Index", "Usuario")" class="actions__item zmdi zmdi-arrow-left text-danger" title="Volver"></a>
    </div>
</header>
<form asp-action="Create" asp-controller="Usuario" method="post" id="CreateUserForm" enctype="multipart/form-data">
    <div class="card">
        <div class="card-block">
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group form-group--float">
                        @Html.TextBoxFor(m => m.Nombre, new { @class = "form-control" })
                        @Html.Label("Nombre")
                        <i class="form-group__bar"></i>
                    </div>
                    @Html.ValidationMessageFor(m => m.Nombre, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group form-group--float">
                        @Html.TextBoxFor(m => m.Apellido, new { @class = "form-control" })
                        @Html.Label("Apellido")
                        <i class="form-group__bar"></i>
                    </div>
                    @Html.ValidationMessageFor(m => m.Apellido, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group form-group--float">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.Label("Email")
                        <i class="form-group__bar"></i>
                    </div>
                    @Html.ValidationMessageFor(m => m.Email, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 col-lg-12">
                    @Html.Label("Imagen")
                    <div class="card img-card">
                        <div class="card-block">
                            <div class="col-md-12">
                                <img class="img-responsive img-thumbnail img-logo" src="@(String.IsNullOrWhiteSpace(Model.PathImagenPerfil) ? @Url.Content("~/images/Profile/default.png") : Model.PathImagenPerfil)" style="max-height: 250px !important;">
                            </div>
                            <div class="col-md-12">
                                <input type="hidden" name="PathImagenPerfil" id="PathImagenPerfil" value="@Model.PathImagenPerfil" />
                                <div class="form-group toggler-control" id="local">
                                    <input type="file" class="btn btn-default btn-lg" name="ImagenArchivo" id="ImagenArchivo" />
                                </div>
                            </div>
                            <span id="UrlLogo2" class="text-danger" style="display:none;">Debe seleccionar un logo para el comercio.</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="card">
        <div class="card-block">
            <div class="row">
                <div class="col-md-12">
                    @Html.Label("Perfiles")
                    <div class="form-group">
                        @Html.DropDownList("roles", selectRoles, new { @class = "roles", aria_hidden = "true", multiple = "", tabindex = "-1", @id = "RolesDropDown" })
                        @Html.HiddenFor(m => m.ArrayRoles)
                    </div>
                    <span class="text-danger field-validation-error" data-valmsg-for="arrayRoles" data-valmsg-replace="true">
                        <span class="text-arrayRoles-error"></span>
                    </span>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <button id="submit-btn" class="btn btn-primary btn--icon-text waves-effect float-right">
                <i class="zmdi zmdi-save"></i>
                Guardar
            </button>
        </div>
    </div>
</form>
<script>
    $(document).ready(function () {
        $('.roles').select2();

    });
    document.getElementById("ImagenArchivo").onchange = function () {
        verifyImage();
        var reader = new FileReader();
        reader.onload = function (e) {
            // get loaded data and render thumbnail.
            $(".img-logo").attr("src", e.target.result);
            $("#PathImagenPerfil").val(e.target.result);
        };
        // read the image file as a data URL.
        reader.readAsDataURL(this.files[0]);
    };
    $(".img-logo").click(function () { $("#ImagenArchivo").click(); });
    $("#ImagenArchivo").change(function () {
        if ($("#PathImagenPerfil").val() === "") {
            $("#UrlLogo2").css('display', 'none');
        }
    });
    function verifyImage() {

        if ($("#ImagenArchivo").val() === "")
            var imgRoute = window.location.origin + "/images/no-avatar.png";
        $(".img-logo").attr("src", imgRoute);
        $("#PathImagenPerfil").val("");
        $("#UrlLogo2").css('display', 'block');
    }
    $("#submit-btn").click(function (event) {
        event.preventDefault();
        var rolesSelect = $("#RolesDropDown").val();
        var statusRoles = checkStatusRoles(rolesSelect);

        if ($('#CreateUserForm').valid() && statusRoles) {
            $("#submit-btn").html("<i class='zmdi zmdi-spinner fa-spin'></i> Procesando...");
            $("#submit-btn").addClass("disabled");
            document.getElementById("submit-btn").style.pointerEvents = "none";
            SendForm();
        }
    });

    function SendForm(obj) {
        var arrayRoles = $("#RolesDropDown").val();
        $("#ArrayRoles").val(arrayRoles.toString());
        var formName = $(obj).data("form");
        var theForm = document.getElementById("CreateUserForm")/*.forms[formName]*/;
        theForm.submit();
    }

    function checkStatusRoles(rolesSelect) {
        var status = false;
        if (rolesSelect.length === 0) {
            $(".text-arrayRoles-error").text("Debe seleccionar al menos un Perfil");
            status = false;
        } else {
            status = true;
        }
        return status;
    }

    $(".roles").change(function () {
        var rolesSelect = $("#RolesDropDown").val();
        if (rolesSelect != null || rolesSelect.length <= 1) {
            $(".text-arrayRoles-error").text("");
        } else {
            $(".text-arrayRoles-error").text("Debe seleccionar al menos un Perfil");
        }
    });

</script>